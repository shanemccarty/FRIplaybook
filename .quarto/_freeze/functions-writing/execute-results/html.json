{
  "hash": "a22da3fba23f6c2cad509655ac234cb0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Using Functions to Write: From Text to Code\"\nauthor: \"Zihan Hei\"\nabstract: |\n  This chapter introduces reproducible research practices by demonstrating how to embed \n  R code directly into manuscript text using Quarto. Students learn to replace manually \n  typed numbers with dynamic inline R code that automatically updates when data changes, \n  reducing errors and improving research reproducibility. Through practical examples using \n  survey data, the chapter covers reporting sample sizes, calculating percentages, \n  formatting numbers as words, interpreting descriptive statistics tables, and presenting \n  statistical test results. By the end of this chapter, students will be able to transform \n  static numbers in their research papers into dynamic, code-generated values that maintain \n  accuracy throughout the research process.\nkeywords:\n  - quarto publishing\n  - in line coding\n  - writing\nformat: live-html\nengine: knitr\neditor: visual\n---\n\n\n::: {.cell}\n\n:::\n\n\n\n## Chapter Purpose\n\nIn reproducible research, writing *numbers* *manually* (e.g., \"We surveyed 120 people.\") can lead to errors if you import data later (after you have collected 140 people). Instead, use **R functions** inside **Quarto** to turn your results directly into sentences!\n\n## First Setup the library:\n\n\n::: {.cell autorun='false' completion='true'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(psych)\nlibrary(knitr)\nlibrary(tibble)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(scales)     # for number formatting like comma()\nlibrary(english)    # to convert numbers to words\nlibrary(stringr)    # for text functions like str_c()\n```\n:::\n\n\n## Dataset: Example Survey Data\n\nStudents will work with this example zerosum dataset `select_data.csv`:\n\n\n::: {.cell autorun='false' completion='true'}\n\n```{.r .cell-code}\n# Load your data\nselect_data <- read.csv(\"select_data.csv\")\n\n# displays structures of R objects\nstr(select_data)\n```\n:::\n\n\n\n\n\n\n## Example 1: Reporting Sample Size in a Manuscript (using inline R)\n\n\n::: {.cell autorun='false' completion='true'}\n\n```{.webr .cell-code}\n# Example: find out total survey responses (# of rows of data)\ntotal_responses <- nrow(select_data)\n\n# print out total responses\ntotal_responses\n```\n:::\n\n\n## In your manuscript, write like this:\n\n\n::: {.cell}\n\n```{.markdown .cell-code}\nWe surveyed a total of `r total_responses` participants.\n```\n:::\n\n\nWhen you render the output, you'll get:\n\n\n::: {.cell}\n\n```{.markdown .cell-code}\nWe surveyed a total of 122 participants.\n```\n:::\n\n\n## Example 2: Report Numbers and Percentages\n\nYou can combine counts and percentages easily.\n\n\n::: {.cell autorun='false' completion='true'}\n\n```{.webr .cell-code}\n# find out each total racial groups responses\nasian_responses <- sum(select_data$RACIALIDENTITY.4 == \"Asian\")\nblack_responses <- sum(select_data$RACIALIDENTITY.4 == \"Black\")\nwhite_responses <- sum(select_data$RACIALIDENTITY.4 == \"White\")\nmixed_other_responses <- sum(select_data$RACIALIDENTITY.4 == \"Mixed/Other\")\n\n# get the percentage of each racial groups\nasian <- asian_responses / total_responses\nblack <- black_responses / total_responses\nwhite <- white_responses / total_responses\nmixed_other <- mixed_other_responses / total_responses\n\n# print out responses\nasian_responses\nblack_responses\nwhite_responses\nmixed_other_responses\n\n# print out percentage\nasian\nblack\nwhite\nmixed_other\n```\n:::\n\n\n## In your manuscript, write like this:\n\n\n::: {.cell}\n\n```{.markdown .cell-code}\nOut of `r total_responses` participants, The final sample was roughly balanced in terms of \nracial identity (White: `r percent(white, accuracy = 0.1)`, \n                 Black: `r percent(black, accuracy = 0.1)`,\n                 Asian: `r percent(asian, accuracy = 0.1)`, \n                 Mixed/Other: `r percent(mixed_other, accuracy = 0.1)`).\n```\n:::\n\n\nWhen you render the output, you'll get:\n\n\n::: {.cell}\n\n```{.markdown .cell-code}\nOut of 122 participants, The final sample was roughly balanced in terms of racial identity\n(White: 40.2%, Black: 23.0%, Asian: 18.9%, Mixed/Other: 18.0%).\n```\n:::\n\n\n## Example 3: Capitalizing and Writing Numbers as Words\n\nFor more formal writing, report numbers as words:\n\n## In your manuscript, write like this:\n\n\n::: {.cell}\n\n```{.markdown .cell-code}\nA total of `r str_to_title(as.character(english(total_responses)))` participants were included in the analysis.\n```\n:::\n\n\nWhen you render the output, you'll get:\n\n\n::: {.cell}\n\n```{.markdown .cell-code}\nA total of One Hundred And Twenty-Two participants were included in the analysis.\n```\n:::\n\n\n## Example 4: Interpret a table by using inline R code (Mean, SD, Range)\n\n\n::: {.cell tbl-cap='Descriptive Statistics Table for Continuous Variables'}\n\n```{.r .cell-code}\n# Define Continuous Variables\ncontinuous_vars <- c(\n  \"AGE\", \"SOCIALSTATUS\", \"POLITICALBELIEFS\",\n  paste0(\"ZEROSUM_\", 1:11)\n)\n\ndesc_table_continuous <- select_data %>%\n  select(all_of(continuous_vars)) %>%\n  psych::describe() %>%\n  tibble::rownames_to_column(var = \"Variable\") %>%\n  select(Variable, n, mean, median, sd, min, max)\n\n# Remove font specifications from nice_table\nknitr::kable(desc_table_continuous,\n             digits = 2)\n```\n\n::: {.cell-output-display}\n\n\n|Variable         |   n|  mean| median|    sd| min| max|\n|:----------------|---:|-----:|------:|-----:|---:|---:|\n|AGE              | 121| 36.10|   33.0| 12.73|  19|  73|\n|SOCIALSTATUS     | 122|  5.30|    5.5|  1.78|   1|   9|\n|POLITICALBELIEFS | 120|  3.67|    4.0|  1.35|   1|   6|\n|ZEROSUM_1        | 122|  3.92|    4.0|  1.78|   1|   7|\n|ZEROSUM_2        | 121|  4.75|    5.0|  1.59|   1|   7|\n|ZEROSUM_3        | 121|  4.92|    5.0|  1.49|   1|   7|\n|ZEROSUM_4        | 121|  3.07|    3.0|  1.69|   1|   7|\n|ZEROSUM_5        | 122|  2.84|    3.0|  1.75|   1|   7|\n|ZEROSUM_6        | 121|  3.43|    3.0|  2.07|   1|   7|\n|ZEROSUM_7        | 120|  3.52|    4.0|  1.81|   1|   7|\n|ZEROSUM_8        | 121|  2.93|    3.0|  1.63|   1|   7|\n|ZEROSUM_9        | 121|  2.59|    2.0|  1.74|   1|   7|\n|ZEROSUM_10       | 122|  3.20|    3.0|  1.75|   1|   7|\n|ZEROSUM_11       | 121|  3.17|    3.0|  1.74|   1|   7|\n\n\n:::\n:::\n\n\n## In your manuscript, write like this:\n\n\n::: {.cell}\n\n```{.markdown .cell-code}\nDescriptive statistics for all study variables are presented in Continuous Descriptive Statistics Table. \nThe sample consisted of `r nrow(select_data)` participants, \nwith a mean age of `r round(desc_table_continuous$mean[desc_table_continuous$Variable == \"AGE\"], 2)` \nyears (SD = `r round(desc_table_continuous$sd[desc_table_continuous$Variable == \"AGE\"], 2)`, \nrange = `r desc_table_continuous$min[desc_table_continuous$Variable == \"AGE\"]`\n– `r desc_table_continuous$max[desc_table_continuous$Variable == \"AGE\"]`). \n\nParticipants reported a mean social status of \n`r round(desc_table_continuous$mean[desc_table_continuous$Variable == \"SOCIALSTATUS\"], 2)` \n(SD = `r round(desc_table_continuous$sd[desc_table_continuous$Variable == \"SOCIALSTATUS\"], 2)`) on a 10-point scale.\n```\n:::\n\n\nWhen you render the output, you'll get:\n\n\n::: {.cell}\n\n```{.markdown .cell-code}\nDescriptive statistics for all study variables are presented in Continuous Descriptive Statistics Table. \nThe sample consisted of 122 participants, with a mean age of 36.1 years (SD = 12.73, range = 19 – 73). \nParticipants reported a mean social status of 5.3 (SD = 1.78) on a 10-point scale.\n```\n:::\n\n\n## Example 5: Interpret P-value in a Kruskal-Wallis Test by using inline R code\n\n\n::: {.cell}\n\n```{.webr .cell-code}\nkw.ZEROSUM_1.party <- kruskal.test(ZEROSUM_1 ~ POLITICALPARTY, data = select_data)\nkw.ZEROSUM_1.party\n\n```\n:::\n\n\n## In your manuscript, write like this:\n\n\n::: {.cell}\n\n```{.markdown .cell-code}\nThere was no significant difference in ZEROSUM_1 scores across political party groups, \nKruskal-Wallis χ²(`r kw.ZEROSUM_1.party$parameter`) = `r round(kw.ZEROSUM_1.party$statistic, 2)`, \n*p* = `r signif(kw.ZEROSUM_1.party$p.value, 3)`.\n```\n:::\n\n\nWhen you render the output, you'll get:\n\n\n::: {.cell}\n\n```{.markdown .cell-code}\nThere was no significant difference in ZEROSUM_1 scores across political party groups, \nKruskal-Wallis χ²(2) = 1.5, p = 0.473.\n```\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}