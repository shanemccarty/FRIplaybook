---
title: "Quarto Markdown Document"
subtitle: "How to start, write in markdown, add YAML, and write code chunks"
author: "Shane McCarty"
abstract: |
  This chapter introduces students to creating and structuring Quarto markdown documents (.qmd)
  for reproducible research. Students learn to set up new Quarto documents, configure metadata
  using YAML headers, and write formatted text using markdown syntax. The chapter demonstrates
  proper code chunk structure with descriptive labels, detailed figure captions, and execution
  options. Students explore essential practices including file naming conventions, environment
  management, and documentation through code sources and explanations. By the end of this
  chapter, students will understand how to create professional, well-documented Quarto reports
  that integrate narrative text with embedded R code, following reproducible research standards
  for public health manuscripts.
keywords:
  - quarto
  - YAML
  - markdown
  - code chunks
  - reproducible research
  - file management
format: html
editor: visual
execute:
  warning: false
  message: false
---

::: callout-tip
## ðŸ“– `quarto` resources

-   [Primary website](https://quarto.org)
-   [R4DS Book Chapter](https://r4ds.hadley.nz/quarto.html)
-   [Youtube: Getting Started](https://www.youtube.com/watch?v=_f3latmOhew)
-   [Youtube: Quarto for Academics](https://www.youtube.com/watch?v=EbAAmrB0luA)
-   [Posit Cheatsheet](https://rstudio.github.io/cheatsheets/html/quarto.html)
-   [PDF Cheatsheet](https://rstudio.github.io/cheatsheets/quarto.pdf)

:::

In your Posit Cloud window browser, you should see the *source* and *visual* editor options in the top left corner of your screen. You can toggle back and forth between the two options.

-   The source option is your best option for coding in R with line items.

-   The visual editor is your best place to see the quarto markdown document (.qmd) before it is officially rendered as an HTML output.

## Create a Markdown Document

-   File \> New File \> Quarto Document
-   Complete Title and Author Name, Create
-   File \> Save As \> name-it-now.qmd
-   Check the file shows up in your files in the bottom right window as .qmd file

### Quarto Document File Names

For individual lab and report quarto reports:

-   Your individual lab was renamed to `lab.qmd`
-   Your results and discussion report should be named: `RDreport.qmd`
-   After submitting your `RDreport.qmd`, you should go to the files tab, check the box next to `RDreport.qmd` and then click the gear icon (More) \> Copy \> name it `yourlastname_report.qmd`
-   Your final report should be named: `yourlastname_report.qmd`

::: callout-important
## Requirement

Please name your quarto markdown files (`.qmd`) correctly.
:::

### Clearing Environment in Posit Cloud

Your previously created objects (e.g., `alldata`, `select_data`, `VARIABLE1`) are stored in your environment even when you return to your posit cloud account. It is important to clear all objects from your environment before beginning your next assignment. Also, this code is important to use when you want to double check that your `.qmd` document will render correctly. You can clear all of the objects and then run your entire .qmd document to check for errors.

```{r}
# Remove all objects from the global environment
rm(list = ls())
```

For your draft and final team MMR manuscript, you should: - pick one quantitative team member to store the team files in their posit cloud project - rename this specific posit cloud project from #1: Vivian -\> #1: Vivian & Team (to notify me where to look for your team's MMR work) - create a `team_RD.qmd` file - create a `team_final.qmd` file

## YAML

YAML (human-readable data serialization language) has a simple syntax, which is a structured way to organize information (aka metadata), such as title, author, date, and format output (HTML vs. PDF).

::: callout-important
### Requirement

Use this YAML format at the top of ALL Quarto markdown document files (`.qmd`).
:::

```{YAML}
---

title: "name your final report here"
author: "put your full name here"
date: "3/22/2023"
abstract: |
    TBD goes here
format: 
  html:
    fig-width: 8
    fig-height: 4
    code-fold: true
    
---
```

For more information, see [YAML](https://quarto.org/docs/reference/formats/html.html).

## Markdown

You will write in the English language with [markdown](https://quarto.org/docs/authoring/markdown-basics.html) language to format your quarto report.

```{markdown}
This is a language called markdown. It is very simple. You can use
*italics*, **bold**, ***bold italics*** to produce:
```

-   *italics*
-   **bold**
-   ***bold italics***

### Verbatim Code

You can use a backtick to denote code or the name of a variable by placing a word within \`\`. For example, if I put EFFICACY between \`\` then it returns `EFFICACY` . This will be important for naming variables in your report.

::: callout-important
## Requirement

Use \` \` between CAPITALIZED variable names in your report if you are referring to the measured variable. The use of backticks is NOT appropriate in your introduction and discussion sections, but backticks should be used in your methods and results sections.
:::

## Code Chunks

A traditional R script (`.R`) involves code throughout the entire script. A Quarto Markdown Document (`.qmd`) integrates the R programming language with markdown language into a single document that can include a mix of code and written content. We use `report.qmd` and other `.qmd` files to write a reproducible manuscript using written text within embedded code chunks.

### Example Code Chunk

Below is an example from the @ggplot2.qmd chapter of an informative `label` for your code chunk and a very detailed figure caption ( `fig-cap`). Also, notice that all code chunk options start with `#|` and use a `:`.

For more examples, see @ggplot2.qmd.

```{r}
#| label: scatterplot-BMI-insurance
#| fig-cap: A scatterplot depicting the relationship between body mass index and insurance charges with a line of best fit to demonstrate the liner relationship between the two variables
#| echo: fenced
#| eval: false
```

### Template Code Chunk

#### Label for All Code Chunks

::: callout-important
## Requirement

Every code chunk must have a `#| label:` at the start of the chunk.
:::

```{{r}}
#| label: this is a label that you will revise

```

Your `#| label:` should be lowercase with dashs between words to create a complete object with no spaces, such as import-data-csv or import-data-xlsx.

```{{r}}
#| label: import-data-xlsx

```

#### Figure Caption (Fig-Cap) for Plot Code Chunks

::: callout-important
## Requirement

Every plot should include a detailed figure caption using `#| fig-cap:`
:::

```{{r}}
#| label: you-need-to-revise-this
#| fig-cap: you need to revise this with detailed figure caption

```

#### Provide Sources for ALL Code Chunks

::: callout-important
## Requirement

At the end of every code chunk, include the source of the code chunk so that others can replicate your work. You should use a pseudo APA citation format with (author, year) and website link (if possible).
:::

```{{r}}
#| label: you-need-to-revise-this
#| fig-cap: you need to revise this with detailed figure caption

#source example 1: The FRI Playbook (McCarty, 2025)   
#source example 2: Write Functions (Hei, 2025)   
#source example 3: Quarto guide markdown basics: https://quarto.org/docs/authoring/markdown-basics.html

```

Notice that the format is different. The `#source:` NOT be in the prior `#|` format you used for the code chunks at the topic. The #source will be at the bottom of your code chunk.

#### Provide Explanation for ALL Code Chunks

::: callout-important
## Requirement

You will explain the code chunk in your own words using `#explanation:` at the bottom of your code chunk.
:::

```{r}
#| label: scatterplot-BMI-insurance
#| fig-cap: A scatterplot depicting the relationship between body mass index and insurance charges with a line of best fit to demonstrate the liner relationship between the two variables
#| echo: fenced
#| eval: false

ggplot(data = insurance, mapping = aes(x = bmi, y = charges)) +
  geom_point() +
  geom_smooth(method = "lm")

#source: Introduction to ggplot2 (Silhavy & McCarty, 2025)
#explanation: the insurance data is being used with BMI for the x variable and insurance charges for the year variable. geom_point is used for scatterplots. geom_smooth with lm adds a linear model on top of the datapoint to show the association between BMI and insurance charges

```

#### Code Chunk Options

For more information on code chunks, see [code chunk options](https://r4ds.hadley.nz/quarto.html#chunk-options).

```{r}
#| label: example-with-options
#| eval: true          # Whether to execute the code
#| echo: fenced        # for teaching -- this shows the code chunk options to you
#| output: true        # Whether to display output
#| warning: false      # Hide warnings
#| message: false      # Hide messages
#| error: false        # Hide errors
#| fig-cap: "Caption"  # Figure caption
#| fig-width: 8        # Figure width in inches
#| fig-height: 6       # Figure height in inches

# Your code here below these code chunk options
```
