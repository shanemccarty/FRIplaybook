[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "The Quantitative Playbook for Public Health Research in R",
    "section": "",
    "text": "Preface\nThe most successful sports teams rely on well-designed plays to navigate complex game situations, the FRI Public Health research stream uses strategic data analysis “plays” to tackle the multifaceted challenges of promoting wellbeing, preventing disease, and protecting health. Our research stream explores the intricate biopsychosocial factors affecting human physical and mental health by collecting physiological data through wearables like MUSE S and Fitbits, psychological insights via survey questionnaires and interviews, and behavioral patterns through online experiments. Like a coach calling the right play at the crucial moment, this playbook equips you and your research teams with proven strategies for importing, tidying, transforming, visualizing, modeling, and communicating the mixed-methods data that helps us connect the dots between social, political, commercial, and economic determinants of health behavior, outcomes, and inequities. Each “play” in this guide has been field-tested by research teams who have successfully used quantitative and qualitative approaches to answer pressing questions about physical and mental health. Whether you’re facing a complex dataset for the first time or looking to refine your analytical strategy, this playbook offers guidance for you to turn data into information, information into knowledge, and knowledge into wisdom in order to improve public health outcomes.\nTo learn more about the FRI Public Health stream, visit us at: https://fripublichealth.quarto.pub.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  The Quantitative Playbook for Public Health Research in R",
    "section": "",
    "text": "1.1 The Data Analysis Workflow\nStudents in the FRI Public Health research stream at Binghamton University explore a variety of biopsychosocial factors affecting human physical and mental health. This playbook includes a variety of “plays” (R code) that students in the quantitative data analysis track can use for their team-based research projects.\nThis playbook follows the data science workflow in R for Data Science (2e) (Hadley, 2023) to help researchers examine the prevalence of disease and wellbeing indicators, describe health patterns, identify associations between (risk/protective/promotive) determinants and (positive/negative) health outcomes, and produce a reproducible scientific report with R and Quarto.\nBy the end of this guide, you will be able to:\nEach section builds on previous concepts, taking you from raw data files to polished, publication-ready, transparent, and reproducible scientific report.",
    "crumbs": [
      "Introduction",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>The Playbook</span>"
    ]
  },
  {
    "objectID": "intro.html#the-data-analysis-workflow",
    "href": "intro.html#the-data-analysis-workflow",
    "title": "1  The Quantitative Playbook for Public Health Research in R",
    "section": "",
    "text": "Import - Load data from various files, such as text (.csv), excel (.xlsx), and SPSS (.sav)\nTidy - Organize data into a consistent, analysis-ready structure\nTransform - Clean, recode, and create new variables using dplyr\nVisualize - Create informative graphs and charts with ggplot2\nModel - Apply statistical methods (e.g., regression, paired t-test) to answer questions\nCommunicate - Generate reproducible reports with Quarto\nPublish – Use transparent practices to produce multiple products (e.g., report, manuscript, presentation)\n\n\n\n1.1.1 What Makes This Guide Different?\n\nInteractive Learning: Some code examples can be copy and pasted into your .R script, .qmd markdown report file, or run in the console. Some chapters include code examples that run directly in your browser using WebR—no software installation required\nReal Public Health Data: Examples use datasets on insurance claims from kaggle, oral health and diabetes (cohort 10), health beliefs (cohort 11), and related surveys\nComplete Workflow: Covers every step from raw data to publication-ready reports\nPractical Focus: Emphasizes “plays” (R code chunks) you’ll actually use in public health research and practice",
    "crumbs": [
      "Introduction",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>The Playbook</span>"
    ]
  },
  {
    "objectID": "intro.html#prerequisites",
    "href": "intro.html#prerequisites",
    "title": "1  The Quantitative Playbook for Public Health Research in R",
    "section": "1.2 Prerequisites",
    "text": "1.2 Prerequisites\nTechnical Requirements:\n\nA web browser (Chrome, Firefox, Safari, or Edge) for interactive WebR examples\nPosit Cloud in a browser or R/R Studio on your computer\n\nBackground Knowledge:\n\nBasic familiarity with public health concepts\nIntroductory statistics (descriptive statistics, hypothesis testing, p-values)\nMotivation to learn more R programming (with limited R experience!)",
    "crumbs": [
      "Introduction",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>The Playbook</span>"
    ]
  },
  {
    "objectID": "intro.html#how-to-cite-this-guide",
    "href": "intro.html#how-to-cite-this-guide",
    "title": "1  The Quantitative Playbook for Public Health Research in R",
    "section": "1.3 How to Cite This Guide",
    "text": "1.3 How to Cite This Guide\nYou can cite this guide as McCarty, S. (Ed.). (2025). The Quantitative Playbook for Public Health Research in R. Or, you can cite a specific chapter: Silhavy, A. & McCarty, S. (2025). Introduction to ggplot2: Creating publication-ready visualizations. The Quantitative Playbook for Public Health Research in R.\n\n1.3.1 Authors\n\nEditor: Shane McCarty, PhD\nChapter Authors\n\nAllison Anemone\nMara Estreich\nZihan Hei\nJeff John\nGavin Rualo\nErica Sava\nAndrew Silhavy\nZach Spiegel\n\n\nAfter generating original content or sourcing from vetted R resources (e.g., Posit, datacamp, R for Data Science), claude.ai was used to create chapter summaries based on the chapter content and code. For some chapters, claude.ai was used to simplify, refine, or improve existing code chunks.",
    "crumbs": [
      "Introduction",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>The Playbook</span>"
    ]
  },
  {
    "objectID": "example.html",
    "href": "example.html",
    "title": "2  Example Reports",
    "section": "",
    "text": "Replication or reproducibility crisis\n\ngrowing concern about the inability to reproduce published scientific research findings\n\n\nA Nature paper by Baker (2016) states: “More than 70% of researchers have tried and failed to reproduce another scientist’s experiments, and more than half have failed to reproduce their own experiments.”\nThe failure to reproduce research is a function of systems pressure (defunding of public higher education), intentional actions (fraudulent scientific practices), unintentional decision-making (e.g., human error when clicking software, poor note-taking), and scientific training (e.g., methodology sections without clear protocols and details). Reproducible research is both an intentional practice and the outcome of scientific training emphasizing a specific workflow.\nA primary objective of this playbook is to increase the reproducibility of public health research using line-by-line coding in R with Quarto for publishing the research with code chunks to confirm accuracy.\n\n3 Reproducible Reports\nYou and your team will produce a reproducible Quarto Markdown report (.qmd) for your individual report and team manuscript. Specific instructions are provided in the next chapter.\nQuarto provided two examples of a reproducible report and manuscript:\n\nStandard Quarto Report Example\nStandard Quarto Manuscript Example\n\nThe FRI Public Health Lab has produced Quarto manuscripts from active research projects:\n\nHealth Avoiders Report\nZero Sum Full Report\nZero Sum Mini Report",
    "crumbs": [
      "Introduction",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Reproducible Reports</span>"
    ]
  },
  {
    "objectID": "codechunks.html",
    "href": "codechunks.html",
    "title": "3  Start Quarto Markdown Document",
    "section": "",
    "text": "4 Create a Markdown Document\nIn your Posit Cloud window browser, you should see the source and visual editor options in the top left corner of your screen. You can toggle back and forth between the two options.",
    "crumbs": [
      "Introduction",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Start Quarto Document</span>"
    ]
  },
  {
    "objectID": "codechunks.html#quarto-document-file-names",
    "href": "codechunks.html#quarto-document-file-names",
    "title": "3  Start Quarto Markdown Document",
    "section": "4.1 Quarto Document File Names",
    "text": "4.1 Quarto Document File Names\nFor individual lab and report quarto reports:\n\nYour individual lab was renamed to lab.qmd\nYour results and discussion report should be named: RDreport.qmd\nAfter submitting your RDreport.qmd, you should go to the files tab, check the box next to RDreport.qmd and then click the gear icon (More) &gt; Copy &gt; name it name_report.qmd\nYour final report should be named: name_report.qmd\n\n\n\n\n\n\n\nImportantRequirement\n\n\n\nYou must name your quarto markdown files (.qmd) correctly.",
    "crumbs": [
      "Introduction",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Start Quarto Document</span>"
    ]
  },
  {
    "objectID": "codechunks.html#clearing-environment-in-posit-cloud",
    "href": "codechunks.html#clearing-environment-in-posit-cloud",
    "title": "3  Start Quarto Markdown Document",
    "section": "4.2 Clearing Environment in Posit Cloud",
    "text": "4.2 Clearing Environment in Posit Cloud\nYour previously created objects (e.g., alldata, select_data, VARIABLE1) are stored in your environment even when you return to your posit cloud account. It is important to clear all objects from your environment before beginning your next assignment. Also, this code is important to use when you want to double check that your .qmd document will render correctly. You can clear all of the objects and then run your entire .qmd document to check for errors.\n\n# Remove all objects from the global environment\nrm(list = ls())\n\nFor your draft and final team MMR manuscript, you should: - pick one quantitative team member to store the team files in their posit cloud project - rename this specific posit cloud project from #1: Vivian -&gt; #1: Vivian & Team (to notify me where to look for your team’s MMR work) - create a team_RD.qmd file - create a team_final.qmd file",
    "crumbs": [
      "Introduction",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Start Quarto Document</span>"
    ]
  },
  {
    "objectID": "codechunks.html#verbatim-code",
    "href": "codechunks.html#verbatim-code",
    "title": "3  Start Quarto Markdown Document",
    "section": "6.1 Verbatim Code",
    "text": "6.1 Verbatim Code\nYou can use a backtick to denote code or the name of a variable by placing a word within ``. For example, if I put EFFICACY between `` then it returns EFFICACY . This will be important for naming variables in your report.\n\n\n\n\n\n\nImportantRequirement\n\n\n\nUse ` ` between CAPITALIZED variable names in your report if you are referring to the measured variable. The use of backticks is NOT appropriate in your introduction and discussion sections, but backticks should be used in your methods and results sections.",
    "crumbs": [
      "Introduction",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Start Quarto Document</span>"
    ]
  },
  {
    "objectID": "codechunks.html#example-code-chunk",
    "href": "codechunks.html#example-code-chunk",
    "title": "3  Start Quarto Markdown Document",
    "section": "7.1 Example Code Chunk",
    "text": "7.1 Example Code Chunk\nBelow is an example from the @ggplot2.qmd chapter of an informative label for your code chunk and a very detailed figure caption ( fig-cap). Also, notice that all code chunk options start with #| and use a :.\nFor more examples, see @ggplot2.qmd.\n\n```{r}\n#| label: scatterplot-BMI-insurance\n#| fig-cap: A scatterplot depicting the relationship between body mass index and insurance charges with a line of best fit to demonstrate the liner relationship between the two variables\n#| eval: false\nggplot(data = insurance, mapping = aes(x = bmi, y = charges)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n#source: Introduction to ggplot2 (Silhavy & McCarty, 2025)\n#explanation: the insurance data is being used with BMI for the x variable and insurance charges for the year variable. geom_point is used for scatterplots. geom_smooth with lm adds a linear model on top of the datapoint to show the association between BMI and insurance charges\n```",
    "crumbs": [
      "Introduction",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Start Quarto Document</span>"
    ]
  },
  {
    "objectID": "codechunks.html#template-code-chunk",
    "href": "codechunks.html#template-code-chunk",
    "title": "3  Start Quarto Markdown Document",
    "section": "7.2 Template Code Chunk",
    "text": "7.2 Template Code Chunk\n\n7.2.1 Label for All Code Chunks\n\n\n\n\n\n\nImportantRequirement\n\n\n\nEvery code chunk must have a #| label: at the start of the chunk.\n\n\n```{r}\n#| label: this is a label that you will revise\n\n```\nYour #| label: should be lowercase with dashs between words to create a complete object with no spaces, such as import-data-csv or import-data-xlsx.\n```{r}\n#| label: import-data-xlsx\n\n```\n\n\n7.2.2 Figure Caption (Fig-Cap) for Plot Code Chunks\n\n\n\n\n\n\nImportantRequirement\n\n\n\nEvery plot should include a detailed figure caption using #| fig-cap:\n\n\n```{r}\n#| label: you-need-to-revise-this\n#| fig-cap: you need to revise this with detailed figure caption\n\n```\n\n\n7.2.3 Provide Sources for ALL Code Chunks\n\n\n\n\n\n\nImportantRequirement\n\n\n\nAt the end of every code chunk, include the source of the code chunk so that others can replicate your work. You should use a pseudo APA citation format with (author, year) and website link (if possible).\n\n\n```{r}\n#| label: you-need-to-revise-this\n#| fig-cap: you need to revise this with detailed figure caption\n\n#source example 1: The FRI Playbook (McCarty, 2025)   \n#source example 2: Write Functions (Hei, 2025)   \n#source example 3: Quarto guide markdown basics: https://quarto.org/docs/authoring/markdown-basics.html\n\n```\nNotice that the format is different. The #source: NOT be in the prior #| format you used for the code chunks at the topic. The #source will be at the bottom of your code chunk.\n\n\n7.2.4 Provide Explanation for ALL Code Chunks\n\n\n\n\n\n\nImportantRequirement\n\n\n\nYou will explain the code chunk in your own words using #explanation: at the bottom of your code chunk.\n\n\n\n```{r}\n#| label: scatterplot-BMI-insurance\n#| fig-cap: A scatterplot depicting the relationship between body mass index and insurance charges with a line of best fit to demonstrate the liner relationship between the two variables\n#| eval: false\n\nggplot(data = insurance, mapping = aes(x = bmi, y = charges)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n#source: Introduction to ggplot2 (Silhavy & McCarty, 2025)\n#explanation: the insurance data is being used with BMI for the x variable and insurance charges for the year variable. geom_point is used for scatterplots. geom_smooth with lm adds a linear model on top of the datapoint to show the association between BMI and insurance charges\n```\n\n\n\n7.2.5 Code Chunk Options\nFor more information on code chunks, see code chunk options.\n\n```{r}\n#| label: example-with-options\n#| eval: true          # Whether to execute the code\n#| echo: fenced        # for teaching -- this shows the code chunk options to you\n#| output: true        # Whether to display output\n#| warning: false      # Hide warnings\n#| message: false      # Hide messages\n#| error: false        # Hide errors\n#| fig-cap: \"Caption\"  # Figure caption\n#| fig-width: 8        # Figure width in inches\n#| fig-height: 6       # Figure height in inches\n\n# Your code here below these code chunk options\n```",
    "crumbs": [
      "Introduction",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Start Quarto Document</span>"
    ]
  },
  {
    "objectID": "export.html",
    "href": "export.html",
    "title": "4  Exporting Survey Data",
    "section": "",
    "text": "5 Exporting Survey Data\n\nLog into Qualtrics: https://binghamton.co1.qualtrics.com\n\nUnder Active surveys, click on your survey\n\nRecode variables in Qualtrics\n\nVisit “Recode Values” section of the Qualtrics guide\nFollow the instructions: https://docs.google.com/document/d/15ynxeoIaLhABAAeDLJYV1MwQRwpI8LM24Zd3tOwxcFQ/edit?tab=t.0#heading=h.25d8wyh38wre\n\n\n\n\n6 Exporting Survey Data\n\nLog into Qualtrics: https://binghamton.co1.qualtrics.com\n\nUnder Active surveys, click on your survey\n\nAt the top, go to Data & Analysis tab (top navigation bar)\n\nEnsure that “Data” is selected (from the second navigvation bar)\n\n\n\n\n\nClick on Data & Analysis and ensure Data is underlined in the navigation bars.\n\n\n\nOn the upper right side, click Export & Import ^, then select Export Data…\nDownload the dataset (with download all fields checked and export values check – do not select export labels in two file formats:\n\nCSV\nExcel\n\nUpload both files to “Survey Data” folder in your Team ELN\nRename both files using the date MONTH.DAY.YEAR.filename.team#.filetype. For example, you should use {r} Sys.Date() in the correct format and update the file names: 10.15.2025.data.team1.csv and 10.15.2025.data.team1.xlsx",
    "crumbs": [
      "Importing Data",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Exporting from Qualtrics</span>"
    ]
  },
  {
    "objectID": "import-simple.html",
    "href": "import-simple.html",
    "title": "5  Importing Data Simply",
    "section": "",
    "text": "5.1 Introduction to Data Import\nImporting data is the first step in the data science workflow. Before you can clean, visualize, or model your data, you need to get it into R. Public health researchers work with data from many sources and in many formats. In FRI-PH, we will import data from a survey collected in the software Qualtrics.\nCommon data sources:\n# Load packages (do this each session)\nlibrary(NHANES)    # CDC health data\nlibrary(tidyverse) # Data wrangling (includes readr)\nlibrary(readxl)    # Read Excel files\nlibrary(haven)     # Read SPSS/SAS/Stata files",
    "crumbs": [
      "Importing Data",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Importing Data Simply</span>"
    ]
  },
  {
    "objectID": "import-simple.html#introduction-to-data-import",
    "href": "import-simple.html#introduction-to-data-import",
    "title": "5  Importing Data Simply",
    "section": "",
    "text": "Survey platforms (Qualtrics, REDCap)\nR packages (e.g., NHANES)\nOther statistical softwares (e.g., SPSS, SAS, Stata)\nSpreadsheets (Excel, Google Sheets)\nDatabases (SQL)",
    "crumbs": [
      "Importing Data",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Importing Data Simply</span>"
    ]
  },
  {
    "objectID": "import-simple.html#file-formats",
    "href": "import-simple.html#file-formats",
    "title": "5  Importing Data Simply",
    "section": "6.1 File Formats",
    "text": "6.1 File Formats\n\nNational Health and Nutrition Examination Survey dataset from the Centers for Disease Control and Prevention (CDC) using the R package NHANES\na .csv file format of the class dataset “health beliefs (cohort 11)” collected in the Research Methods I (ANTH206) course 03.15.2025.prolificgealthbeliefs.csv\na .xlsx file format of the class dataset “health beliefs (cohort 11) collected in the Research Methods I (ANTH206) course 03.15.2025.prolifichealthbeliefs.xlsx\na .sav file format from SPSS of the FRI team project on oral health 10.31.2024.oralhealth.sav.",
    "crumbs": [
      "Importing Data",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Importing Data Simply</span>"
    ]
  },
  {
    "objectID": "import-simple.html#first-setup-the-library",
    "href": "import-simple.html#first-setup-the-library",
    "title": "5  Importing Data Simply",
    "section": "7.1 First Setup the library:",
    "text": "7.1 First Setup the library:\n\nlibrary(tidyverse)\nlibrary(psych)\nlibrary(knitr)\nlibrary(tibble)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(scales)     # for number formatting like comma()\nlibrary(english)    # to convert numbers to words\nlibrary(stringr)    # for text functions like str_c()\nlibrary(NHANES)",
    "crumbs": [
      "Importing Data",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Importing Data Simply</span>"
    ]
  },
  {
    "objectID": "import-simple.html#import-from-nhanes-package",
    "href": "import-simple.html#import-from-nhanes-package",
    "title": "5  Importing Data Simply",
    "section": "7.2 Import from NHANES package",
    "text": "7.2 Import from NHANES package\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Importing Data",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Importing Data Simply</span>"
    ]
  },
  {
    "objectID": "import-simple.html#data-structure",
    "href": "import-simple.html#data-structure",
    "title": "5  Importing Data Simply",
    "section": "7.3 Data Structure",
    "text": "7.3 Data Structure\nNow, you will view the structure of the NHANES data\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Importing Data",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Importing Data Simply</span>"
    ]
  },
  {
    "objectID": "import-simple.html#data-header",
    "href": "import-simple.html#data-header",
    "title": "5  Importing Data Simply",
    "section": "7.4 Data Header",
    "text": "7.4 Data Header\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Importing Data",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Importing Data Simply</span>"
    ]
  },
  {
    "objectID": "import-simple.html#variables-aka-column-names",
    "href": "import-simple.html#variables-aka-column-names",
    "title": "5  Importing Data Simply",
    "section": "7.5 Variables (aka Column) Names",
    "text": "7.5 Variables (aka Column) Names\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Importing Data",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Importing Data Simply</span>"
    ]
  },
  {
    "objectID": "import-simple.html#view-data",
    "href": "import-simple.html#view-data",
    "title": "5  Importing Data Simply",
    "section": "7.6 View Data",
    "text": "7.6 View Data\nIn Posit Cloud, you can use View() in your CONSOLE to view the dataframe.\n```{r}\nlibrary(NHANES)\n# View data\nView(NHANESraw)\n```",
    "crumbs": [
      "Importing Data",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Importing Data Simply</span>"
    ]
  },
  {
    "objectID": "import-simple.html#import-from-excel-.xlsx-file",
    "href": "import-simple.html#import-from-excel-.xlsx-file",
    "title": "5  Importing Data Simply",
    "section": "7.7 Import from Excel .xlsx file",
    "text": "7.7 Import from Excel .xlsx file\nExcel files (.xlsx or .xls) are common in public health. Use the readxl package to import them.\n\nlibrary(readxl)\n# Import Excel file\nhealthbeliefs_xlsx &lt;- read_excel(\"data/03.15.2025.prolifichealthbeliefs.xlsx\")\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n7.7.1 Excel: Import Data to Assign Missing Data to NA\n\n\n\n\n\n\nWarning\n\n\n\nThis page is under construction. It will include important missing data information.",
    "crumbs": [
      "Importing Data",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Importing Data Simply</span>"
    ]
  },
  {
    "objectID": "import-continuous.html",
    "href": "import-continuous.html",
    "title": "6  Live Qualtrics Reporting",
    "section": "",
    "text": "6.1 Benefits of QualtRics Continuous Importing of Survey Data\nBy importing data continously using the qualtRics R package, you do not need to export from qualtrics and upload/import a data file. You can generate with up-to-date data instaneously for a:\n- Quarto report - Plots in a shiny app - Quarto presentation, such as a live demonstration with survey data collected moments ago or to show what your code can do",
    "crumbs": [
      "Importing Data",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Importing Data Continously</span>"
    ]
  },
  {
    "objectID": "import-continuous.html#getting-necessary-qualtrics-information",
    "href": "import-continuous.html#getting-necessary-qualtrics-information",
    "title": "6  Live Qualtrics Reporting",
    "section": "6.2 Getting necessary Qualtrics information",
    "text": "6.2 Getting necessary Qualtrics information\n\n\n\nQualtrics Info\n\n\nWhen you log into Qualtrics, you’re going to need to retrieve a few pieces of data specific to your account and the survey that you want to get live data from. Here, we’ve clicked our user icon in the top right and gone to “Account Settings.” You’re going to need these strings later.\nNext, you’re going to need your survey ID. When you click on the survey that you’re getting live data from, the URL will look something like this: https://binghamton.yul1.qualtrics.com/survey-builder/SV_6mOC1SaJbecAuP0/edit The survey ID is the string between survey-builder/ and /edit, in this case, being “SV_6mOC1SaJbecAuP0”\nGetting into the actual code, we have the following steps: ## Import necessary packages:\n\nlibrary(httr)\nlibrary(jsonlite)\nlibrary(readr)",
    "crumbs": [
      "Importing Data",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Importing Data Continously</span>"
    ]
  },
  {
    "objectID": "import-continuous.html#save-important-info-to-variables",
    "href": "import-continuous.html#save-important-info-to-variables",
    "title": "6  Live Qualtrics Reporting",
    "section": "6.3 Save important info to variables:",
    "text": "6.3 Save important info to variables:\n\napi_token &lt;- \"1V0X29BHlwPfSYPsUMQ5d8tQfeydhsVBcGQ2v9Bw\"\ndata_center &lt;- \"yul1\"\nsurvey_id &lt;- \"SV_6mOC1SaJbecAuP0\"\n\nbase_url &lt;- paste0(\"https://\", data_center, \".qualtrics.com/API/v3\")\nheaders &lt;- add_headers(\n  \"X-API-TOKEN\" = api_token,\n  \"Content-Type\" = \"application/json\"\n)\n\nIn this chunk, after saving our API key and survey ID info, we construct the URL that we are going to scrape using the paste0 function (which just combines the arguments into a single string with no spaces between them). We add these specific headers because they are necessary arguments for the API call.",
    "crumbs": [
      "Importing Data",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Importing Data Continously</span>"
    ]
  },
  {
    "objectID": "import-continuous.html#start-the-export-job",
    "href": "import-continuous.html#start-the-export-job",
    "title": "6  Live Qualtrics Reporting",
    "section": "6.4 Start the export job",
    "text": "6.4 Start the export job\n\nstart_response_export &lt;- function(survey_id) {\n  url &lt;- paste0(base_url, \"/surveys/\", survey_id, \"/export-responses\")\n  body &lt;- list(format = \"csv\")  # Use CSV format here\n  res &lt;- POST(url, headers, body = toJSON(body, auto_unbox = TRUE))\n  stop_for_status(res)\n  content(res, as = \"parsed\", simplifyVector = TRUE)\n}\n\nThis chunk creates the API endpoint and allows us to begin exporting. It also gives us a progress report on how close the data is to being exported!",
    "crumbs": [
      "Importing Data",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Importing Data Continously</span>"
    ]
  },
  {
    "objectID": "import-continuous.html#poll-for-export-completion",
    "href": "import-continuous.html#poll-for-export-completion",
    "title": "6  Live Qualtrics Reporting",
    "section": "6.5 Poll for export completion",
    "text": "6.5 Poll for export completion\n\ncheck_export_progress &lt;- function(progress_id) {\n  url &lt;- paste0(base_url, \"/surveys/\", survey_id, \"/export-responses/\", progress_id)\n  repeat {\n    res &lt;- GET(url, headers)\n    stop_for_status(res)\n    progress &lt;- content(res, as = \"parsed\", simplifyVector = TRUE)\n    if (progress$result$status == \"complete\") {\n      return(progress$result$fileId)\n    } else if (progress$result$status == \"failed\") {\n      stop(\"Export failed\")\n    }\n    Sys.sleep(2)\n  }\n}\n\nOnce the export is ready, this chunk returns the ID for the file that we can now download from the API.",
    "crumbs": [
      "Importing Data",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Importing Data Continously</span>"
    ]
  },
  {
    "objectID": "import-continuous.html#download-and-read-csv-file",
    "href": "import-continuous.html#download-and-read-csv-file",
    "title": "6  Live Qualtrics Reporting",
    "section": "6.6 Download and read CSV file",
    "text": "6.6 Download and read CSV file\n\ndaily_download_responses_csv &lt;- function(file_id) {\n  url &lt;- paste0(base_url, \"/surveys/\", survey_id, \"/export-responses/\", file_id, \"/file\")\n  res &lt;- GET(url, headers)\n  stop_for_status(res)\n  tmp &lt;- tempfile(fileext = \".zip\")\n  writeBin(content(res, \"raw\"), tmp)\n  unzip_dir &lt;- tempdir()\n  unzip(tmp, exdir = unzip_dir)\n  csv_file &lt;- list.files(unzip_dir, pattern = \"*.csv\", full.names = TRUE)\n  read_csv(csv_file)\n}\n\nThis chunk unpacks the output into a .csv file which makes it ready for analysis!",
    "crumbs": [
      "Importing Data",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Importing Data Continously</span>"
    ]
  },
  {
    "objectID": "import-continuous.html#main-execution",
    "href": "import-continuous.html#main-execution",
    "title": "6  Live Qualtrics Reporting",
    "section": "6.7 Main execution",
    "text": "6.7 Main execution\n\nexport_response &lt;- start_response_export(survey_id)\nprogress_id &lt;- export_response$result$progressId\nfile_id &lt;- check_export_progress(progress_id)\nresponses_df &lt;- daily_download_responses_csv(file_id)\n\nFinally, we set up our dataframes. These dataframes are now in your environment and can update charts or tables every time you reload the export!",
    "crumbs": [
      "Importing Data",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Importing Data Continously</span>"
    ]
  },
  {
    "objectID": "tidy.html",
    "href": "tidy.html",
    "title": "7  Tidying your data with tidyr",
    "section": "",
    "text": "Tip📖 Learning Resources\n\n\n\n\nR for Data Science: Data Tidying\nDatacamp Course: dplyr\nCheat Sheet: dplyr\nPosit Interactive Page: dplyr\n\n\n\nMore coming soon!",
    "crumbs": [
      "Tidy Data",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Tidying Your Data</span>"
    ]
  },
  {
    "objectID": "readme.html",
    "href": "readme.html",
    "title": "8  How to Read Me",
    "section": "",
    "text": "9 Read Me\nA readme.qmd file instructs someone else to read me. It provides basic information and contextual information to a colleague who wants to replicate or check your work.\nTo see an example of an excellent read me file, see “zero sum report read me file”: https://fripublichealth.quarto.pub/zerosum/readme-preview.html",
    "crumbs": [
      "Report Transparently:",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Read Me File</span>"
    ]
  },
  {
    "objectID": "functions.html",
    "href": "functions.html",
    "title": "9  Use Functions to Write",
    "section": "",
    "text": "9.1 Purpose\nIn reproducible research, writing numbers manually (e.g., “We surveyed 120 people.”) can lead to errors if you import data later (after you have collected 140 people). Instead, use R functions inside Quarto to turn your results directly into sentences!",
    "crumbs": [
      "Report Transparently:",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Use Functions to Write</span>"
    ]
  },
  {
    "objectID": "functions.html#first-setup-the-library",
    "href": "functions.html#first-setup-the-library",
    "title": "9  Use Functions to Write",
    "section": "9.2 First Setup the library:",
    "text": "9.2 First Setup the library:\n\nlibrary(tidyverse)\nlibrary(psych)\nlibrary(knitr)\nlibrary(tibble)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(scales)     # for number formatting like comma()\nlibrary(english)    # to convert numbers to words\nlibrary(stringr)    # for text functions like str_c()",
    "crumbs": [
      "Report Transparently:",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Use Functions to Write</span>"
    ]
  },
  {
    "objectID": "functions.html#dataset-example-survey-data",
    "href": "functions.html#dataset-example-survey-data",
    "title": "9  Use Functions to Write",
    "section": "9.3 Dataset: Example Survey Data",
    "text": "9.3 Dataset: Example Survey Data\nThe dataset was collected on March 15, 2025 in the ANTH206 course: 03152025ProlificHealthBeliefs.csv.\n\n# Load your data\n##  \"data/\" is a folder called \"data\" where the dataset file is located\n## if your data is not in a folder, you can delete \"data/\"\nselect_data &lt;- read.csv(\"data/03.15.2025.prolifichealthbeliefs.csv\")\n\n# displays structures of R objects\nstr(select_data)",
    "crumbs": [
      "Report Transparently:",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Use Functions to Write</span>"
    ]
  },
  {
    "objectID": "functions.html#example-1-reporting-sample-size-in-a-manuscript-using-inline-r",
    "href": "functions.html#example-1-reporting-sample-size-in-a-manuscript-using-inline-r",
    "title": "9  Use Functions to Write",
    "section": "9.4 Example 1: Reporting Sample Size in a Manuscript (using inline R)",
    "text": "9.4 Example 1: Reporting Sample Size in a Manuscript (using inline R)\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Report Transparently:",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Use Functions to Write</span>"
    ]
  },
  {
    "objectID": "functions.html#in-your-manuscript-write-like-this",
    "href": "functions.html#in-your-manuscript-write-like-this",
    "title": "9  Use Functions to Write",
    "section": "9.5 In your manuscript, write like this:",
    "text": "9.5 In your manuscript, write like this:\n\nWe surveyed a total of `r total_responses` participants.\n\nWhen you render the output, you’ll get:\n\nWe surveyed a total of 122 participants.",
    "crumbs": [
      "Report Transparently:",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Use Functions to Write</span>"
    ]
  },
  {
    "objectID": "functions.html#example-2-report-numbers-and-percentages",
    "href": "functions.html#example-2-report-numbers-and-percentages",
    "title": "9  Use Functions to Write",
    "section": "9.6 Example 2: Report Numbers and Percentages",
    "text": "9.6 Example 2: Report Numbers and Percentages\nYou can combine counts and percentages easily.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Report Transparently:",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Use Functions to Write</span>"
    ]
  },
  {
    "objectID": "functions.html#in-your-manuscript-write-like-this-1",
    "href": "functions.html#in-your-manuscript-write-like-this-1",
    "title": "9  Use Functions to Write",
    "section": "9.7 In your manuscript, write like this:",
    "text": "9.7 In your manuscript, write like this:\n\nOut of `r total_responses` participants, The final sample was roughly balanced in terms of \nracial identity (White: `r percent(white, accuracy = 0.1)`, \n                 Black: `r percent(black, accuracy = 0.1)`,\n                 Asian: `r percent(asian, accuracy = 0.1)`, \n                 Mixed/Other: `r percent(mixed_other, accuracy = 0.1)`).\n\nWhen you render the output, you’ll get:\n\nOut of 122 participants, The final sample was roughly balanced in terms of racial identity\n(White: 40.2%, Black: 23.0%, Asian: 18.9%, Mixed/Other: 18.0%).",
    "crumbs": [
      "Report Transparently:",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Use Functions to Write</span>"
    ]
  },
  {
    "objectID": "functions.html#example-3-capitalizing-and-writing-numbers-as-words",
    "href": "functions.html#example-3-capitalizing-and-writing-numbers-as-words",
    "title": "9  Use Functions to Write",
    "section": "9.8 Example 3: Capitalizing and Writing Numbers as Words",
    "text": "9.8 Example 3: Capitalizing and Writing Numbers as Words\nFor more formal writing, report numbers as words:",
    "crumbs": [
      "Report Transparently:",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Use Functions to Write</span>"
    ]
  },
  {
    "objectID": "functions.html#in-your-manuscript-write-like-this-2",
    "href": "functions.html#in-your-manuscript-write-like-this-2",
    "title": "9  Use Functions to Write",
    "section": "9.9 In your manuscript, write like this:",
    "text": "9.9 In your manuscript, write like this:\n\nA total of `r str_to_title(as.character(english(total_responses)))` participants were included in the analysis.\n\nWhen you render the output, you’ll get:\n\nA total of One Hundred And Twenty-Two participants were included in the analysis.",
    "crumbs": [
      "Report Transparently:",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Use Functions to Write</span>"
    ]
  },
  {
    "objectID": "functions.html#example-4-interpret-a-table-by-using-inline-r-code-mean-sd-range",
    "href": "functions.html#example-4-interpret-a-table-by-using-inline-r-code-mean-sd-range",
    "title": "9  Use Functions to Write",
    "section": "9.10 Example 4: Interpret a table by using inline R code (Mean, SD, Range)",
    "text": "9.10 Example 4: Interpret a table by using inline R code (Mean, SD, Range)\n\n# Define Continuous Variables\ncontinuous_vars &lt;- c(\n  \"AGE\", \"SOCIALSTATUS\", \"POLITICALBELIEFS\",\n  paste0(\"ZEROSUM_\", 1:11)\n)\n\ndesc_table_continuous &lt;- select_data %&gt;%\n  select(all_of(continuous_vars)) %&gt;%\n  psych::describe() %&gt;%\n  tibble::rownames_to_column(var = \"Variable\") %&gt;%\n  select(Variable, n, mean, median, sd, min, max)\n\n# Remove font specifications from nice_table\nknitr::kable(desc_table_continuous,\n             digits = 2)\n\n\nDescriptive Statistics Table for Continuous Variables\n\n\nVariable\nn\nmean\nmedian\nsd\nmin\nmax\n\n\n\n\nAGE\n121\n36.10\n33.0\n12.73\n19\n73\n\n\nSOCIALSTATUS\n122\n5.30\n5.5\n1.78\n1\n9\n\n\nPOLITICALBELIEFS\n120\n3.67\n4.0\n1.35\n1\n6\n\n\nZEROSUM_1\n122\n3.92\n4.0\n1.78\n1\n7\n\n\nZEROSUM_2\n121\n4.75\n5.0\n1.59\n1\n7\n\n\nZEROSUM_3\n121\n4.92\n5.0\n1.49\n1\n7\n\n\nZEROSUM_4\n121\n3.07\n3.0\n1.69\n1\n7\n\n\nZEROSUM_5\n122\n2.84\n3.0\n1.75\n1\n7\n\n\nZEROSUM_6\n121\n3.43\n3.0\n2.07\n1\n7\n\n\nZEROSUM_7\n120\n3.52\n4.0\n1.81\n1\n7\n\n\nZEROSUM_8\n121\n2.93\n3.0\n1.63\n1\n7\n\n\nZEROSUM_9\n121\n2.59\n2.0\n1.74\n1\n7\n\n\nZEROSUM_10\n122\n3.20\n3.0\n1.75\n1\n7\n\n\nZEROSUM_11\n121\n3.17\n3.0\n1.74\n1\n7",
    "crumbs": [
      "Report Transparently:",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Use Functions to Write</span>"
    ]
  },
  {
    "objectID": "functions.html#in-your-manuscript-write-like-this-3",
    "href": "functions.html#in-your-manuscript-write-like-this-3",
    "title": "9  Use Functions to Write",
    "section": "9.11 In your manuscript, write like this:",
    "text": "9.11 In your manuscript, write like this:\n\nDescriptive statistics for all study variables are presented in Continuous Descriptive Statistics Table. \nThe sample consisted of `r nrow(select_data)` participants, \nwith a mean age of `r round(desc_table_continuous$mean[desc_table_continuous$Variable == \"AGE\"], 2)` \nyears (SD = `r round(desc_table_continuous$sd[desc_table_continuous$Variable == \"AGE\"], 2)`, \nrange = `r desc_table_continuous$min[desc_table_continuous$Variable == \"AGE\"]`\n– `r desc_table_continuous$max[desc_table_continuous$Variable == \"AGE\"]`). \n\nParticipants reported a mean social status of \n`r round(desc_table_continuous$mean[desc_table_continuous$Variable == \"SOCIALSTATUS\"], 2)` \n(SD = `r round(desc_table_continuous$sd[desc_table_continuous$Variable == \"SOCIALSTATUS\"], 2)`) on a 10-point scale.\n\nWhen you render the output, you’ll get:\n\nDescriptive statistics for all study variables are presented in Continuous Descriptive Statistics Table. \nThe sample consisted of 122 participants, with a mean age of 36.1 years (SD = 12.73, range = 19 – 73). \nParticipants reported a mean social status of 5.3 (SD = 1.78) on a 10-point scale.",
    "crumbs": [
      "Report Transparently:",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Use Functions to Write</span>"
    ]
  },
  {
    "objectID": "functions.html#example-5-interpret-p-value-in-a-kruskal-wallis-test-by-using-inline-r-code",
    "href": "functions.html#example-5-interpret-p-value-in-a-kruskal-wallis-test-by-using-inline-r-code",
    "title": "9  Use Functions to Write",
    "section": "9.12 Example 5: Interpret P-value in a Kruskal-Wallis Test by using inline R code",
    "text": "9.12 Example 5: Interpret P-value in a Kruskal-Wallis Test by using inline R code\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Report Transparently:",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Use Functions to Write</span>"
    ]
  },
  {
    "objectID": "functions.html#in-your-manuscript-write-like-this-4",
    "href": "functions.html#in-your-manuscript-write-like-this-4",
    "title": "9  Use Functions to Write",
    "section": "9.13 In your manuscript, write like this:",
    "text": "9.13 In your manuscript, write like this:\n\nThere was no significant difference in ZEROSUM_1 scores across political party groups, \nKruskal-Wallis χ²(`r kw.ZEROSUM_1.party$parameter`) = `r round(kw.ZEROSUM_1.party$statistic, 2)`, \n*p* = `r signif(kw.ZEROSUM_1.party$p.value, 3)`.\n\nWhen you render the output, you’ll get:\n\nThere was no significant difference in ZEROSUM_1 scores across political party groups, \nKruskal-Wallis χ²(2) = 1.5, p = 0.473.",
    "crumbs": [
      "Report Transparently:",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Use Functions to Write</span>"
    ]
  }
]